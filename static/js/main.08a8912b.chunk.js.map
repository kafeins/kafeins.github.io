{"version":3,"sources":["images/kafeins-brand.png","images/botol-almond-landing.png","components/Header.js","components/ButtonPrimary.js","components/Beranda.js","history.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Container","className","Navbar","collapseOnSelect","expand","bg","variant","to","Brand","href","alt","src","kafeins","height","Toggle","aria-controls","Collapse","id","Nav","activeKey","Item","activeStyle","fontWeight","exact","ButtonPrimary","props","Button","children","Beranda","Row","Col","xs","sm","BotolLanding","createBrowserHistory","KontakPage","lazy","ProdukPage","PemesananPage","App","history","fallback","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.08a8912b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kafeins-brand.f8282874.png\";","module.exports = __webpack_public_path__ + \"static/media/botol-almond-landing.8873fce0.png\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\n\r\nimport kafeins from \"../images/kafeins-brand.png\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <>\r\n      <Container className=\"pt-2\">\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"white\" variant=\"light\">\r\n          <NavLink to=\"/\">\r\n            <Navbar.Brand className=\"open-sans font-weight-700 text-24\" href=\"\">\r\n              <img\r\n                alt=\"Kafeins Kopi Enak Cold Brew\"\r\n                src={kafeins}\r\n                height=\"28\"\r\n                className=\"my-auto\"\r\n              />\r\n            </Navbar.Brand>\r\n          </NavLink>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"ml-auto\" activeKey=\"\">\r\n              <Nav.Item>\r\n                <NavLink\r\n                  activeStyle={{ fontWeight: 700 }}\r\n                  className=\"nav-link active open-sans text-16 ml-2 mr-2\"\r\n                  exact\r\n                  to=\"/\"\r\n                >\r\n                  Beranda\r\n                </NavLink>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <NavLink\r\n                  activeStyle={{ fontWeight: 700 }}\r\n                  className=\"nav-link active open-sans text-16 ml-2 mr-2\"\r\n                  exact\r\n                  to=\"/produk\"\r\n                >\r\n                  Produk\r\n                </NavLink>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <NavLink\r\n                  activeStyle={{ fontWeight: 700 }}\r\n                  className=\"nav-link active open-sans text-16 ml-2 mr-2\"\r\n                  exact\r\n                  to=\"/kontak\"\r\n                >\r\n                  Kontak\r\n                </NavLink>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <NavLink\r\n                  activeStyle={{ fontWeight: 700 }}\r\n                  className=\"nav-link active open-sans text-16 ml-2 mr-2\"\r\n                  exact\r\n                  to=\"/pesan\"\r\n                >\r\n                  Pesan\r\n                </NavLink>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nfunction ButtonPrimary(props) {\r\n  return (\r\n    <Button className=\"btn button coklat text-white open-sans text-20 font-weight-700\">\r\n      {props.children}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default ButtonPrimary;\r\n","import React from \"react\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport BotolLanding from \"../images/botol-almond-landing.png\";\r\nimport ButtonPrimary from \"./ButtonPrimary\";\r\nfunction Beranda() {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col xs={12} sm={6}>\r\n          <h1 className=\"font-weight-700 text-landing\">\r\n            Nyegerin dan bikin melek!\r\n          </h1>\r\n          <p className=\"open-sans text-24 text-landing-description\">\r\n            Kopi Cold Brew dengan rasa yang unik, enak, rendah asam, dan lembut\r\n          </p>\r\n          <NavLink exact to=\"/pesan\">\r\n            <ButtonPrimary>Pesan</ButtonPrimary>\r\n          </NavLink>\r\n        </Col>\r\n        <Col xs={12} sm={6} className=\"d-flex justify-content-center\">\r\n          <img\r\n            className=\"img-responsive img-landing\"\r\n            src={BotolLanding}\r\n            alt=\"tiga botol cold brew\"\r\n          />{\" \"}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\nexport default Beranda;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { Suspense, lazy } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Beranda from \"./components/Beranda\";\n// import ProdukPage from \"./components/ProdukPage\";\nimport history from \"./history\";\n// import PemesananPage from \"./components/PemesananPage\";\n// import KontakPage from \"./components/KontakPage\";\nconst KontakPage = lazy(() => import(\"./components/KontakPage\"));\nconst ProdukPage = lazy(() => import(\"./components/ProdukPage\"));\nconst PemesananPage = lazy(() => import(\"./components/PemesananPage\"));\n\nfunction App() {\n  return (\n    <BrowserRouter history={history}>\n      <Header />\n      <Suspense fallback={<div className=\"container mx-auto\">Loading...</div>}>\n        <Route path=\"/\" exact component={Beranda} />\n        <Route path=\"/produk\" component={ProdukPage} />\n        <Route path=\"/kontak\" component={KontakPage} />\n        <Route path=\"/pesan\" component={PemesananPage} />\n      </Suspense>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./style.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}